using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.ReplyMarkups;

namespace SomeDumbBot
{
  class SendMessage
  {
    public static async Task SendRandomStickerOrGif(ITelegramBotClient telegramBotClient, long chatId)
    {
      Random random = new();

      int min = 0;
      int max = 100;

      int randomNum = random.Next(min, max);

      switch (randomNum % 2)
      {
        case 0:
          string[]? stickerIds = Environment.GetEnvironmentVariable("Stickers")?.Split(',');

          if (stickerIds == null || stickerIds.Length == 0)
          {
            Console.WriteLine("–Ω–µ–º–∞ —Å—Ç—ñ–∫–µ—Ä—ñ–≤ –∑–∞ —Ç–∞–∫–∏–º —ñ–º'—è–º");
            return;
          }

          int stickerIdNumMin = 0;
          int stickerIdNumMax = stickerIds.Length;

          int stickerIdNum = random.Next(stickerIdNumMin, stickerIdNumMax);
          string stickerId = stickerIds[stickerIdNum];

          InputFileId? stickerToSend = new(Environment.GetEnvironmentVariable(stickerId));

          if (stickerToSend == null)
          {
            Console.WriteLine($"–Ω–µ–º–∞—î —Å—Ç—ñ–∫–µ—Ä–∞ –∑ ID: {stickerId}");
            return;
          }

          await telegramBotClient.SendStickerAsync(chatId, sticker: stickerToSend);
          Console.WriteLine("—Å—Ç—ñ–∫–µ—Ä –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ");
          return;

        case 1:
          string[]? gifIds = Environment.GetEnvironmentVariable("Gifs")?.Split(',');

          if (gifIds == null || gifIds.Length == 0)
          {
            Console.WriteLine("–Ω–µ–º–∞ –≥—ñ—Ñ–æ–∫ –∑–∞ —Ç–∞–∫–∏–º —ñ–º'—è–º");
            return;
          }

          int gifIdNumMin = 0;
          int gifIdNumMax = gifIds.Length;

          int gifIdNum = random.Next(gifIdNumMin, gifIdNumMax);
          string gifId = gifIds[gifIdNum];

          InputFileId? gifToSend = new(Environment.GetEnvironmentVariable(gifId));

          if (gifToSend == null)
          {
            System.Console.WriteLine($"–Ω–µ–º–∞—î –≥—ñ—Ñ–∫–∏ –∑–∞ ID: {gifId}");
            return;
          }

          await telegramBotClient.SendAnimationAsync(chatId, gifToSend);
          Console.WriteLine("–≥—ñ—Ñ–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ");
          return;

        default:
          Console.WriteLine("—â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫");
          return;
      }
    }

    public static async Task SendPhoto(ITelegramBotClient telegramBotClient, long chatId, string fileId, string caption)
    {
      string url = $"https://drive.google.com/uc?export=view&id={fileId}";
      InputFile inputFile = InputFile.FromUri(url);

      if (inputFile == null)
      {
        Console.WriteLine($"–Ω–µ —ñ—Å–Ω—É—î —Ñ–æ—Ç–∫–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º: https://drive.google.com/uc?export=view&id={fileId}");
        return;
      }

      await telegramBotClient.SendPhotoAsync(chatId, inputFile, caption: caption);
      Console.WriteLine("–∑–∞–∫–∏–Ω—É–≤ —Ñ–æ—Ç–∫—É");
      return;
    }

    public static async Task InlineButtonsIntegralDerivativeChoice(ITelegramBotClient telegramBotClient, long chatId)
    {
      var buttons = new InlineKeyboardButton[][]
      {
        [
          InlineKeyboardButton.WithCallbackData("–¢–∞–±–ª–∏—Ü—è —ñ–Ω—Ç–µ–≥—Ä–∞–ª—ñ–≤ ‚à´", "integral"),
          InlineKeyboardButton.WithCallbackData("–¢–∞–±–ª–∏—Ü—è –ø–æ—Ö—ñ–¥–Ω–∏—Ö üìà", "derivative"),
        ],
        [
          InlineKeyboardButton.WithCallbackData("–ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é üîô", "backToMenu")
        ]
      };

      await telegramBotClient.SendTextMessageAsync(chatId, "–Ø–∫—É —Å–∞–º–µ —Ñ–æ—Ä–º—É–ª—É —Ç–æ–±—ñ —Ç—Ä–µ–±–∞? üìù",
      replyMarkup: new InlineKeyboardMarkup(buttons));
      return;
    }

    public static async Task SendMainMenu(ITelegramBotClient telegramBotClient, long chatId)
    {
      await telegramBotClient.SendTextMessageAsync(chatId, "–ü—Ä—î—Ç üëã. –Ø –º–æ–∂—É –∫–∏–Ω—É—Ç–∏ —Ç–æ–±—ñ —Ñ–æ—Ä–º—É–ª–∫–∏ –∑ –º–∞—Ç–∞–Ω—É ü§ì‚òùÔ∏è —Ç–∞ —Ä–∞–Ω–¥–æ–º–Ω–∏–π –º—î–º–∞—Å—ñ–∫ –∑ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ –Ü–ü-32. –î–ª—è —Ü—å–æ–≥–æ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /formula –∞–±–æ /memes");
    }

    public static async Task SendAlbum(ITelegramBotClient telegramBotClient, long chatId, params string[] filesId)
    {
      IAlbumInputMedia[] albumInputMedia = new IAlbumInputMedia[filesId.Length];
      for (int i = 0; i < filesId.Length; i++)
      {
        string photoUrl = $"https://drive.google.com/uc?export=view&id={filesId[i]}";
        InputFileUrl photoToSend = new(photoUrl);

        if (photoToSend == null)
        {
          Console.WriteLine("—Ç–∞–∫–æ–≥–æ —Ñ–æ—Ç–æ –≤ –º–æ—î–º—É –∞–ª—å–±–æ–º—ñ –Ω–µ–º–∞");
          return;
        }

        albumInputMedia[i] = new InputMediaPhoto(photoToSend)
        {
          Caption = $"—Å—Ç. {i + 1}"
        };
      }

      await telegramBotClient.SendMediaGroupAsync(chatId, albumInputMedia);
      Console.WriteLine("–≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —Ñ–æ—Ç–æ–∫–æ–ª–∞–∂");
      return;
    }
  }
}